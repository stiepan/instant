-- based on test file automatically generated by BNF Converter
module Main where

import System.Environment ( getArgs )
import System.Exit ( exitFailure, exitSuccess )
import System.IO (writeFile)
import System.FilePath.Posix (takeExtension, takeBaseName, dropExtension, takeDirectory)
import System.Process (system)
import System.Exit (ExitCode(ExitFailure, ExitSuccess))

import Control.Monad (when)

import LexGrammar
import ParGrammar
import SkelGrammar
import PrintGrammar
import AbsGrammar
import ErrM

import qualified Llvm.Compile as Llvm
import qualified Llvm.Print as PrintLlvm


main :: IO ()
main = do
  args <- getArgs
  case args of
    [f] -> compileFile f
    _ -> usage


compileFile :: FilePath -> IO ()
compileFile f = do
  when ((takeExtension f) /= ".ins")
    (putStrLn "Incorrect file extension - expected .ins" >> exitFailure)
  let baseName = takeBaseName f
  when (baseName == "")
    (putStrLn "Filename cannot be empty" >> exitFailure)
  source <- readFile f
  code <- compile source baseName
  let dir = takeDirectory f
  let droppedExt = dropExtension f
  let newFileName = droppedExt ++ ".ll"
  let bcFName = dir ++ "/" ++ baseName ++ ".bc"
  writeFile newFileName code
  putStrLn $ newFileName ++ " has been created"
  let llvm_as = "llvm-as  " ++ newFileName ++ " -o " ++ bcFName
  let llvm_link = "llvm-link -o " ++ bcFName ++ " lib/runtime.bc " ++ bcFName
  let command = llvm_as ++ " && " ++ llvm_link
  putStrLn command
  retCode <- system command
  case retCode of
    (ExitFailure errCode) -> do
      putStrLn $ "llvm-as failed with ret code: " ++ (show errCode)
      exitFailure
    _ -> do
      putStrLn $ bcFName ++ " has been created"
      exitSuccess


compile :: String -> String -> IO String
compile programText baseName =
  case pProgram (myLexer programText) of
    Bad s -> do
      putStrLn "\nParsing failed\n"
      putStrLn programText
      exitFailure
    Ok tree -> do
      return $ PrintLlvm.showProg $ Llvm.compileP tree baseName


usage :: IO ()
usage = do
  putStrLn $ unlines
    [ "usage: Call with one of the following argument combinations:"
    , "  --help   Display this help message."
    , "  file     Compile .ins file to jasmin"
    ]
  exitFailure
